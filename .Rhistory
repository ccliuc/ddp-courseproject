library(shiny)
runApp()
data(cars)
cars
?cars
names(cars)
dim(cars)
plot(cars, xlab = "Speed (mph)", ylab = "Stopping distance (ft)",
las = 1, xlim = c(0, 25))
d <- seq(0, 25, length.out = 200)
for(degree in 1:4) {
fm <- lm(dist ~ poly(speed, degree), data = cars)
assign(paste("cars", degree, sep = "."), fm)
lines(d, predict(fm, data.frame(speed = d)), col = degree)
}
anova(cars.1, cars.2, cars.3, cars.4)
runApp()
runApp()
runApp()
data(galton)
?galton
q()
runApp()
runApp()
library(shinny)
library(shiny)
runApp()
q()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp(../)
runApp("C:\Users\liucc\Desktop\Developing Data Products\Week 2")
runApp("C\Users\liucc\Desktop\Developing Data Products\Week 2")
runApp(C:\Users\liucc\Desktop\Developing Data Products\Week 2")
runApp("C:\Users\liucc\Desktop\Developing Data Products\Week 2")
runApp("C:/Users/liucc/Desktop/Developing Data Products/Week 2")
shiny::runApp('C:/Users/liucc/Desktop/Developing Data Products/Week 2')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
data(galton)
library(usingR)
data(galton)
?galton
?usingR
?cars
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
q()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
q()
